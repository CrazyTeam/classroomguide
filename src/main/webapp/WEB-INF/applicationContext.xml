<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="url"
			value="jdbc:mysql://localhost:3306/chensong?useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;transformedBitIsBoolean=true"></property>
		<property name="username" value="root"></property>
		<property name="password" value="123456"></property>
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="10" />
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="50" />
		<!-- 最大空闲连接,最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="20" />
		<!-- 最小空闲连接 -->
		<property name="minIdle" value="5" />
		<!-- 超时等待时间以毫秒为单位,最大建立连接等待时间。如果超过此时间将接到异常。 -->
		<property name="maxWait" value="1000" />
		<!-- 自动提交 -->
		<property name="defaultAutoCommit" value="true" />
		<!-- 是否自动回收超时连接,回收被遗弃的（一般是忘了释放的）数据库连接到连接池中。 -->
		<property name="removeAbandoned" value="true" />
		<!-- 超时时间(以秒数为单位),数据库连接过多长时间不用将被视为被遗弃而收回连接池中 -->
		<property name="removeAbandonedTimeout" value="180" />
		<!-- 是否在自动回收超时连接的时候打印连接的超时错误，将被遗弃的数据库连接的回收记入日志 -->
		<property name="logAbandoned" value="true" />

	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>com/crazyteam/entity/Admin.hbm.xml
				</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>
				org.hibernate.dialect.MySQLDialect
			</value>
		</property>
	</bean>

	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="userService" class="com.crazyteam.service.UserServiceImpl"></bean>
	<bean id="userAction" class="com.crazyteam.action.UserAction" scope="prototype">
		<property name="userService"></property>
	</bean>
	<bean id="adminAction" class="com.crazyteam.action.AdminAction" scope="prototype"></bean>
	
	
</beans>